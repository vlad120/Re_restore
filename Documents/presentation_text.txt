WebServer project presentation

<next>
Я бы хотел презентовать свой проект интернет-магазина, сайта,  с серверной частью, написанной на Python.
<next>
Идеей выступило создание интернет-магазина для продажи электроники с удобным и понятным для каждого интерфейсом.
Необходимо было сделать максимально простое, функциональное и интуитивное управление, начиная от регистрации и оформления заказа, заканчивая панелью управления администратора.
Как результат получился простой, но обладающий всеми необходимыми функциями сайт с оптимизацией под различные устройства.
Вы можете заходить на него с практически любого браузера, элементы никуда не съедут, а просто примут свои минимальные / максимальные размеры, что обусловит вам комфортное пользование.
<next>
Функционала сервиса достаточно, чтобы запустить настоящий интернет-магазин. А при необходимости в него можно легко внести изменения, или добавить новые возможности, благодаря оптимальному разбиению кода на классы и функции.
<next>
Пользователи могут создавать учетные записи, изменять свои данные, делать заказы, отменять их. Администратор, в свою очередь, может управлять пользователями, заказами, добавлять, редактировать и удалять товары.
<next>
Немного о реализации. Скрипт обеспечивает обработку http запросов, отвечая на них сгенерированными html страницами.
В процессе ведётся работа с БД, где хранятся данные пользователей, товаров и заказов, а также категории, точнее их англо-русские соответствия.
Также в приложении реализована работа API, который реализован в отдельных классах, к которым, кстати, и обращается сервер в процессе своей работы.
Используется и файловая система  сервера для хранения фотографий товаров, пользователей и некоторых слайдов.
<next>
Из интересных решений можно отметить использование технологии cookie-файлов для сохранения текущего сеанса, то есть авторизации, и метода сортировки товаров на страницах.
Для декораций страниц дополнительно использовались компоненты Bootstrap.
Также хочу заметить, что с помощью API можно выполнять абсолютно любые действия, которые доступны на сайте, разве что, за исключением просмотра фотографий.
Забегая вперёд, сразу скажу, что именно с этим API будет связан мой следующий проект.
<next>
Теперь о возможностях развития. В будущем хотелось бы добавить email-рассылку тем пользователям, которые на нее подписаны (в личном кабинете уже реализована возможность выбора).
Дополнительно, думаю, неплохо было бы добавить уведомления в личном кабинете (например, при изменении статуса заказа).
Также, на страницу товара можно модернизировать – добавить вкладку с отзывами, сделать текст описания красивее путём форматирования и вынести отдельно характеристики.
Ну и, конечно, сделать удобным редактирование всего этого для администратора.
В остальном, как я уже сказал, на сайте реализованы все необходимые функции.
<next>
На этом всё, спасибо за внимание.