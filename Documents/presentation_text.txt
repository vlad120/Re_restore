WebServer project presentation

<next>
Хочу презентовать свой проект интернет-магазина, сайта с серверной частью, написанной на Python.
<next>
Идеей выступило создание интернет-магазина для продажи электроники с удобным и понятным для каждого интерфейсом.
Необходимо было сделать максимально простое, функциональное и интуитивное управление, начиная от регистрации и оформления заказа, заканчивая панелью управления администратора и редактированием личных данных в профиле.
Как результат получился простой, но обладающий всеми необходимыми функциями магазина сайт с оптимизацией под различные устройства.
Вы можете заходить на него с практически любого девайса, элементы никуда не съедут, а просто примут свои минимальные или максимальные размеры, что обусловит вам комфортное пользование.
<next>
В целом, ункционала сервиса достаточно, чтобы запустить настоящий интернет-магазин.
При необходимости внести в него изменения или добавить новые возможности структура кода позволит вам сделать это наиболее кофортно.
Реализованный API даёт возможность в будущем модернизировать проект, добавив подгрузку данных с помощью JavaScript, не обновляя страницу.
Пользователи могут создавать учетные записи, изменять свои данные, загружать фото в профиль, делать заказы, просматривать их статус или же отменять.
А администратор, в свою очередь, может управлять пользователями и их заказами, добавлять товары, редактировать и удалять их.
При оформлении заказа количество товара в БД уменьшается, а при отмене возвращается обратно.
Если пользователь нажал на кнопку оформления заказа, но какой-то товар в корзине к тому моменту успели заказать другие и требуемого количества уже недостаточно, то он получит уведомление об этом, вернувшись снова в корзину.
<next>
Немного о реализации. Общий принцип состоит в том, что скрипт обрабатывает http запросы, отвечая на них сгенерированными html страницами с нужными данными.
В процессе ведётся работа с БД, где хранятся данные пользователей, товаров и заказов, а также категории и их англо-русские соответствия.
В приложении есть, как уже говорилось, API, который реализован в отдельных классах, к которым обращается сервер в ходе обработки запросов.
Используется и файловая система – для хранения фотографий товаров и пользователей, а также слайдов главной страницы.
<next>
Из интересных решений отмечу использование технологии cookie-файлов для сохранения текущего сеанса, то есть авторизации, и метода сортировки товаров на страницах.
Если вы выставили определенную сортировку, например, по увеличению цены, то она будет распространятся на все остальные страницы.
Для декораций страниц некоторые элементы создавались при помощи готовых стилей Bootstrap.
Также хочу заметить, что с помощью, опять же, API можно выполнять абсолютно любые действия, которые доступны на сайте, благодаря чему получилось создать даже онлайн-консультанта через голосового помощника Алиса.
<next>
Теперь о возможностях развития. В будущем хотелось бы добавить email-рассылку тем пользователям, которые на нее подписаны (в личном кабинете уже реализована возможность выбора данной функции).
Дополнительно, думаю, неплохо было бы добавить уведомления в личном кабинете (например, при изменении статуса заказа).
Также можно модернизировать страницу товара – добавить вкладку с отзывами, сделать текст описания красивее путём форматирования и вынести отдельно характеристики товара в специальную таблицу.
Когда товаров станет уже достаточно много, появится необходимость в их просмотре по небольшим порциям, что можно осуществить в нумерованных страницах.
А для более удобной навигации понадобятся вложенные категории. Чтобы сделать поиск комфортнее, можно ещё добавить фильтр по характеристикам товара.
Ну и, конечно, необходимо будет сделать удобным редактирование всего этого для администратора магазина.
<next>
На этом всё, спасибо за внимание.